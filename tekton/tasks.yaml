apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: nose
spec:
  description: This task will run nosetests on the provided input.
  workspaces:
    - name: source
  params:
    - name: args
      description: Arguments to pass to nose
      type: string
      default: "-v"
    - name: database_uri
      description: Database connection string
      type: string
      default: "sqlite:///test.db"
  steps:
    - name: nosetests
      image: python:3.9-slim
      workingDir: $(workspaces.source.path)
      env:
        - name: DATABASE_URI
          value: $(params.database_uri)
      script: |
        #!/bin/bash
        set -e
        echo "***** Installing dependencies *****"
        python -m pip install --upgrade pip wheel
        pip install -qr requirements.txt
        echo "***** Running nosetests with: $(params.args)"
        nosetests $(params.args)

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: echo-or-cleanup
spec:
  params:
    - name: action
      description: Action to perform (echo or cleanup)
      type: string
    - name: message
      description: The message to echo (required for echo action)
      type: string
  workspaces:
    - name: source
  steps:
    - name: perform-action
      image: alpine:3
      env:
        - name: WORKSPACE_SOURCE_PATH
          value: $(workspaces.source.path)
      workingDir: $(workspaces.source.path)
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      script: |
        #!/usr/bin/env sh
        set -eu
        if [ "$(params.action)" = "echo" ]; then
          echo "$(params.message)"
        elif [ "$(params.action)" = "cleanup" ]; then
          echo "Removing all files from ${WORKSPACE_SOURCE_PATH} ..."
          # Delete any existing contents of the directory if it exists.
          #
          # We don't just "rm -rf ${WORKSPACE_SOURCE_PATH}" because ${WORKSPACE_SOURCE_PATH} might be "/"
          # or the root of a mounted volume.
          if [ -d "${WORKSPACE_SOURCE_PATH}" ] ; then
            # Delete non-hidden files and directories
            rm -rf "${WORKSPACE_SOURCE_PATH:?}"/*
            # Delete files and directories starting with . but excluding ..
            rm -rf "${WORKSPACE_SOURCE_PATH}"/.[!.]*
            # Delete files and directories starting with .. plus any other character
            rm -rf "${WORKSPACE_SOURCE_PATH}"/..?*
          fi
        else
          echo "Invalid action: $(params.action)"
        fi
